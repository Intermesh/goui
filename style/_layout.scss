@use "config";
@use "util";
@use "shadows";

html {
	font-size: var(--density); //makes everything smaller on desktop
}

@media (max-device-width:1200px) {
	html {
		font-size: var(--mobile-density);
		/* changes a default 16px font size to 10px */
	}
}

.goui {
	box-sizing: border-box;
	> * {
		box-sizing: border-box;
	}
}

.goui.main {
	background-color: config.$surfaceLowest;
}

// flow layout. generally used or form fields
.goui.flow {
	display: flex;
	flex-flow: row wrap !important;
	align-content: flex-start;
	align-items: start;
	gap: util.dp(14);
	> * {
		width:100%;
	}
}

%hr {
	border: 0;
	z-index: 1;
	padding: 0;
	width: config.$borderWidth * 5;
	display: block;
	margin: 0 (-2 * config.$borderWidth);
	background-color: transparent;
	color: config.$colorBorder;
	background:linear-gradient(90deg, transparent config.$borderWidth * 2, currentColor config.$borderWidth * 2 config.$borderWidth * 3, transparent config.$borderWidth * 3);
	height: auto; //was needed to override group-office extjs style
	&.draggable {
		cursor: col-resize;
	}

}

// Stack items horizontally
// For border layout use width's on north and south and add class "go-scroll" on center
.goui.hbox {
	display: flex;
	flex-direction: row;
	//max-width: none;
	//max-height: none;
	gap: 0;
	justify-content: flex-start;
	flex-wrap: nowrap;
	align-items: stretch;
	> * { //:not(.goui-form-field) {
		flex:none; //setting flex none prevents squishing of elements with no flex setting. Needed in dialog with share panel for example.
		min-width: 0; // this prevents children from growing larger than the container. We usually don't want that. If you need this then set min-height to "auto".
	}

	.goui.detail {
		min-width: util.dp(300);
	}

	> hr {
		@extend %hr;
	}

	.break {
		&:before {
			content: '';
			width: 100%;
			order: 1;
		}
	}
}

.goui.row {
	display: flex;
	flex-wrap: wrap;
	column-gap: util.dp(12);
	row-gap: 0;
	align-items: start;
}

// Stack items vertically
// For border layout use height's on east and west and add class "go-scroll" on center
.goui.vbox {
	//max-width: none;
	//max-height: none;
	gap: 0;
	justify-content: flex-start;
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	align-items: stretch;
	//> *:not(.goui-form-field) {
	> * {
		flex:none; //setting flex none prevents squishing of elements with no flex setting.
		min-height: 0; // this prevents children from growing larger than the container. We usually don't want that. If you need this then set min-height to "auto".

	}

	> hr {

		width: auto; //was needed to override group-office extjs style
		border: 0;
		z-index: 1;
		padding: 0;
		height: config.$borderWidth * 5;
		display: block;
		margin: (-2 * config.$borderWidth) 0;
		background-color: transparent;
		color: config.$colorBorder;
		background:linear-gradient(180deg, transparent config.$borderWidth * 2, currentColor config.$borderWidth * 2 config.$borderWidth * 3, transparent config.$borderWidth * 3);

		&.draggable {
			cursor: row-resize;
		}

	}
}


.goui.gap {
	gap: util.dp(8);
}


.goui.container {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-items: stretch;
	> * {
		flex: 1 0;
		min-width: 300px;
	}
}




// Make the element fit it's parent
.goui.fit {
	height: 100%;
	width: 100%;
	margin: 0;
}

// padding for text contet
.goui.pad {
	padding: util.dp(24) util.dp(18) !important;
}

.goui.border-bottom {
	border-bottom: config.$borderWidth solid config.$colorBorder !important;
}

.goui.border-top {
	border-top: config.$borderWidth solid config.$colorBorder !important;;
}

.goui.border-left {
	border-left: config.$borderWidth solid config.$colorBorder !important;;
}

.goui.border-right {
	border-bottom: config.$borderWidth solid config.$colorBorder !important;;
}

.goui.frame {
	border: config.$borderWidth solid config.$colorBorder;
	border-radius: util.dp(12);
	overflow:hidden;
	background-color: config.$surfaceLowest;

	> .toolbar {
		background-color: config.$colorBackgroundDarker;
		padding: util.dp(18);
		border-bottom: config.$borderWidth solid config.$colorBorder;
	}

	> :first-child {
		.toolbar:first-child {
			background-color: config.$colorBackgroundDarker;
			padding: util.dp(18);
			border-bottom: config.$borderWidth solid config.$colorBorder;
		}
	}
}

// Scrolling panel
.goui.scroll {
	overflow: auto;
}

.goui {
	.bg-lowest {
		background-color: config.$surfaceLowest;
	}
	.bg-low {
		background-color: config.$surfaceLow;
	}
	.bg-mid {
		background-color: config.$surfaceMid;
	}
	.bg-high {
		background-color: config.$surfaceHigh;
	}
	.bg-highest{
		background-color: config.$surfaceHighest;
	}
}

.goui.hbox.mobile-cards {
	height: 100%;
}

@media only screen and ((max-width: config.$breakpointMedium)) {

	.goui.not-medium-device {
		display: none !important;
	}
	.goui.hbox.tablet-cards {
		> *:not(.active) {
			display: none;
		}
		> * {
			width: 100% !important; //important to override inline width applied by splitter state.
			height: 100% !important;
		}
	}
}
@media only screen and ((max-width: config.$breakpointSmall)) {
	.not-small-device {
		display: none !important;
	}
	.goui.hbox.mobile-cards {
		> *:not(.active) {
			display: none;
		}

		> * {
			width: 100% !important; //important to override inline width applied by splitter state.
			height: 100% !important;
		}
	}
}

@media only screen and ((min-width: config.$breakpointMedium)) {
	.goui.for-medium-device {
		display: none !important;
	}
}


@media only screen and (min-width: config.$breakpointSmall) {
	.goui.for-small-device {
		display: none !important;
	}
}


.goui.card {
	border-radius: config.$borderRadius;
	margin: util.dp(8);
	background-color: var(--bg-lowest);
	overflow:hidden;
	@extend .z2;

	> .goui-fieldset:first-child {
		margin-top: dp(16);
	}
}



//@media print {
//	.goui-print {
//		background-color: white;
//		height: 100%;
//		width: 100%;
//		position: fixed;
//		top: 0;
//		left: 0;
//		margin: 0;
//		padding: 18rem;
//	}
//}



