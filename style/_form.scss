@use 'sass:math';


$formFieldBorderRadius: dp(10);

%input {
	background-color: transparent;
	font: $fontBase;
	min-width: dp(100); //for select element
	margin: 0;
	border: 0;
	padding: dp(11) dp(18);
	width: 100%;
	outline: none;
	color: $colorText;
	display: block;// for text area which has inline-block by default and gets some extra margin
	border-radius: $formFieldBorderRadius;
	&:read-only:not(select) {
		background-color: $colorBackgroundReadOnly;
	}

	&::placeholder {
		transition: all 200ms linear;
		color: transparent;
	}
}

%float-label {
	&::placeholder {
		color: $colorTextPlaceholder;
	}
	&+div.label, &+.goui-toolbar+div.label {
		font-size: sp(13);
		top: 0;
		//transform: translateY(calc(#{dp(-13)} - 0.62em)) scale(.8);
	}
}



.goui-form-field {
	width: 100%;
	display: block;
	align-self: start;
	margin-bottom: dp(16);
	border-radius: $formFieldBorderRadius;
	.wrap {
		display: flex;
		flex-flow: row nowrap;
		transition: border-color 100ms linear;
		border-radius: $formFieldBorderRadius;
		background-color: $colorBackgroundInput;
		border: $borderWidth solid $colorBorder;

		menu.goui-toolbar {
			background-color: transparent;
			padding: 0 !important;
			border-radius: 0 $formFieldBorderRadius $formFieldBorderRadius 0;

			border-left: $borderWidth solid $colorBorder !important; //importants for Window rule for border top
			border-top: 0 !important;
			border-right: 0 !important;
			border-bottom: 0 !important;

			min-height: auto;

			> * {
				margin: 0 dp(4) 0 0;
				padding: dp(6);
			}


			.goui-button {

				&.with-icon:not(.with-text) {
					padding: dp(6);
				}

				color: $colorPrimary;
				&:hover {
					background-color: transparent;
				}
			}
		}
	}



	+ hr {
		margin-top: 0;
	}

	position: relative;

	&:focus-within {
		.wrap {
			border-color: $colorPrimary;
		}

		.label {
			color: $colorPrimary;
		}
	}


	&.frame-hint {
		.wrap {
			border-bottom: 0;
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
		}

		margin-bottom: dp(30); //matches hint size

		&:focus-within:not(.invalid) {
			.hint {
				border-color: $colorPrimary;
			}
		}

		.hint {
			transition: border-color 100ms linear;
			background-color: $colorBackgroundInput;
			border: $borderWidth solid $colorBorder;
			border-radius: 0 0 $formFieldBorderRadius $formFieldBorderRadius;
			padding: dp(3) dp(18);
		}

		&.invalid {
			.hint {
				background-color: $colorErrorBg;
				border-color: $colorError;
			}
		}
	}




	div.label {
		display: flex;
		align-items: center;
		overflow: visible;
		text-overflow: ellipsis;
		white-space: nowrap;
		color: $colorTextSecondary;
		vertical-align: top;
		pointer-events: none;
		position:absolute;
		left: dp(16);
		padding: 0 dp(4);
		top: math.div($baseLineHeight, 2) + dp(11);
		height: 3px;
		background-color: $colorBackgroundInput;

		transition: all 200ms linear;

		//below performs better but looks ugly on windows :(
		will-change: top, font-size;

		//transform: none;
		//transform-origin: top left;

		&:empty {
			display: none;
		}
	}

	>.control {
		width: 100%;
		appearance: none;
		-webkit-appearance: none; /*Removes default chrome and safari style*/
		-moz-appearance: none; /* Removes Default Firefox style*/
	}

	&.invalid {
		.wrap {
			border-color: $colorError;
			background-color: $colorErrorBg;
		}
		.label {
			background-color: $colorErrorBg;
		}
		.hint, .label {
			color: $colorError;
		}

	}

	.error {
		font-size: dp(14);
		color: $colorError;
		line-height: dp(20); //match icon
		padding: 2px dp(12);
		height: dp(20);
		width: 100%;
	}

	.hint {
		font-size: dp(14);
		color: $colorTextSecondary;
		line-height: dp(20); //match icon
		padding: dp(8) dp(18) 0;
		//height: dp(30);
		flex: 1 1 100%;

		&:empty {
			padding: 0;
		}
	}

	/** start text and textarea **/
	input.text, textarea, select {
		@extend %input;

		&:focus, &:not(:placeholder-shown) {
			@extend %float-label;
		}

		&:focus {
			color: $colorPrimary;
		}
	}

	input.text {
		text-overflow: ellipsis;
		overflow: hidden;
		white-space: nowrap;
	}

	/**  end text and textarea **/




	/** start checkbox **/
	&.check {
		input {
			-webkit-appearance: none;
			-moz-appearance: none;
			appearance: none;
			cursor: pointer;
		}
		&.box input {
			min-width: $baseLineHeight;
			min-height: $baseLineHeight;
			width: $baseLineHeight;
			height:$baseLineHeight;
			background-color: $colorBackgroundInput;
			border: $borderWidth solid $colorText;
			border-radius: math.div($borderRadius, 2);
			&:before { // tick
				content: '';
				transform: scale(0);
				display:inline-block;
				margin: 0-$borderWidth;
				width: $baseLineHeight;
				height: $baseLineHeight;
				transition: 90ms transform ease-in-out;
				background-color: $colorPrimary;
				clip-path: polygon(39.375% 74.375%, 16% 51%, 20.48% 46.52%, 39.33% 65.37%, 79.33% 25.37%, 83.81% 29.85%)
			}
			&:checked:before { // tick-on
				transform: scale(1);
			}
			&:focus {
				border-color: $colorPrimary;
				box-shadow: 0 0 0 1px $colorPrimary;
			}
			&[style]:checked:before {
				color:inherit;
				text-shadow: 0 0 1px black;
			}
			&[type="radio"] {
				border-radius: 50%;
				&:checked:before {
					content: '';
					top: 0 - $borderWidth;
					left: 0 - $borderWidth;
					border-radius: 50%;
					transform: scale(.4);
					background-color: $colorPrimary;
				}
			}
		}
		&.switch input { // track
			background-color: $colorBackgroundInput;
			width: dp(50);
			height: dp(28);
			overflow:hidden;
			border: $borderWidth solid $colorBorder;
			position:relative;
			border-radius:999px;
			&::before {
				content: '' !important;
			}
			&::after { // thumb
				position:absolute;
				top: 0px - $borderWidth;
				left: 0px - $borderWidth;
				color:white;
				font-size: .7em;
				content: "";
				transition: 100ms transform ease-out;
				margin: dp(7);
				display:block;
				height: dp(14);
				width: dp(14);
				background-color:  rgba(0, 0, 0, 0.48);
				border-radius:999px;
			}
			&:checked {
				background-color: $colorSecondary;
			}
			&:checked::after  {
				transform: scale(1.5) translateX(dp(14));
				background-color:white;
			}
			&:active::after { // focus
				transform: scale(1.75);
			}
			&:active:checked::after  {
				transform:scale(1.75) translateX(dp(12));
				background-color: $colorBackgroundInput;
			}
			&:focus {
				border-color: $colorPrimary;
				&:checked:after {
					transform:scale(1.75) translateX(dp(12));
				}
			}
		}
		&.button{ // check buttons should be in segment .group
			input:checked + span {
				background-color: green;
			}
		}

		.wrap {
			background-color: transparent;
			border: none;
		}

		.label {
			display: none;
		}

		.control {
			display: flex;
			padding: dp(8) 0;
			align-items: center;

			.box-label {
				flex: 1;
				display: block;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;

				padding: 0 0 0 dp(12);
				margin: auto 0;
				user-select: none;
				-webkit-user-select: none;
				-moz-user-select: none;
			}

		}
	}
	/** end checkbox **/


	&.select {
		position: relative;
		select {
			padding-right: dp(32);
			background-image: none;
			appearance: none;
		}
		&:after {
			color: $colorPrimary;
			position: absolute;
			display: inline-block;
			top: dp(14);
			right: dp(12);
			@extend %icon;
			margin-right: 0;
			content: "expand_more";
			pointer-events: none;
		}
	} // end select

}


.goui-fieldset {
	border: 0;
	min-width: 0;
	padding: 0;
	margin: 0;

	.legend {
		display: block;
		line-height:normal;
		font-size: dp(24);
		font-weight: 500;
		margin: dp(8) 0 dp(24) 0;
		color: black;

	}
}


.goui-html-field {
	position: relative;


	&.invalid {
		div.editor{
			background-color: $colorErrorBg;
			border-color: $colorError;
		}
	}

	div.editor {
		@extend %input;
		@extend .normalize;
		min-height: dp(100);

		img {
			max-width: 100%;
		}

		&:focus, &:not(:empty) {
			@extend %float-label;

			&:empty:before {
				color: $colorTextPlaceholder;
			}
		}

		//placeholder support
		&:empty:before {
			content: attr(data-placeholder);
			color: transparent;
			pointer-events: none;
			transition: all 200ms linear;
		}

	}

	&:focus-within {
		menu.goui-toolbar {
			display: flex;
		}
	}
}

.goui.goui-toolbar.html-field-toolbar {
	position: absolute;
	z-index: $zIndexMenu;
	flex-wrap: wrap;
	max-width: 100%;
	@extend .z8;
}

form {
	// for loading mask
	position: relative;

	.row {
		display: flex;
		flex-wrap: wrap;
		column-gap: dp(12);
		row-gap: 0;
		align-items: stretch;
		>* {
			flex: 1;
		}
	}

	.goui-button {
		margin-bottom: dp(16);
	}
}



.autocomplete {
	&.expanded {
		.wrap {
			border-color: $colorPrimary;
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
			border-bottom: 0;
		}

		.label, .control {
			color: $colorPrimary;
		}

		box-shadow: 0 10px 20px 0 rgb(0 0 0 / 40%);
	}
}

.autocomplete-suggestions {

	@extend .z8;
	border: $borderWidth solid $colorPrimary;
	border-top: 0;
	border-radius: 0 0 $formFieldBorderRadius $formFieldBorderRadius;
	background-color: white;

}


.masked {
	.form-field {
		color: $colorMasked !important;
		.control {
			border-color: $colorMasked !important;
			color: $colorMasked !important;
			background-color: $colorMasked !important;
			> * {
				visibility: hidden;
			}
		}

		.label {
			display: none;
		}
	}
}