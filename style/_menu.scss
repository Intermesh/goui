@use "config";
@use "util";
@use "shadows";
@use "icons";

$menuWidth: util.dp(160);

menu.goui {
	margin-block-start: 0;
	margin-block-end: 0;
	margin-inline-start: 0;
	margin-inline-end: 0;
	padding-inline-start: 0;
}

menu.goui-dropdown {
	@extend .z12;

	max-height: 100vh;
	max-width: 100vw;

	overflow-y: auto;

	display: block;
	z-index: config.$zIndexMenu;
	list-style: none;
	position: fixed;
	min-width: $menuWidth;
	border: config.$borderWidth solid config.$colorLine;
	border-radius: util.dp(8);
	background-color: config.$surfaceLayer;
	backdrop-filter: blur(20px);
	-webkit-backdrop-filter: blur(20px);
	padding: util.dp(6);

	> li {
		display:block;
		position: relative;
		padding: 0;
		margin: 0;

		> button.goui-button {
			font-weight: normal;
			border: 0;
			border-radius: util.dp(6);
			width: 100%;
			text-align: start;
			padding: util.dp(8) util.dp(16);

			//&:hover {
			//	color: config.$colorText;
			//	background-color: config.$colorHover;
			//}

			&:focus, &:focus-visible {
				box-shadow: none;
				border: 0;
				background-color: config.$colorHover;
				color: config.$colorText;
				input:not(:checked) {
					border-color: white;
				}
			}

		}

		.goui-form-field {
			.hint {
				height: 0;
				padding: 0;
			}
		}

		.radiogroup {
			>.wrap {
				.radio {
					display:block; //makes them stack in rows
				}
			}
		}

		> label.goui-form-field.check.box {
			margin-bottom: 0;
			border-radius: util.dp(12);
			padding: 4px util.dp(16);

			.control {
				.box-label {
					color: inherit;
				}
			}
			&:hover {
				background-color: config.$colorHover;
				color: config.$colorText;

				input:not(:checked) {
					border-color: white;
				}
			}
		}

		hr {

			margin: util.dp(12) util.dp(12); //same as button
			color: config.$colorDivider;
		}

		&:first-child {
			hr {
				display: none;
			}
		}
	}

	button & {
		color: config.$colorText;
	}

	// First menu is always visible. button must be clicked to toggle hidden attribute.


	&.expand-left {

		li > menu.goui-dropdown {
			left: -100%;
			transform: translateX(util.dp(-24));
		}

	}

	li > menu.goui-dropdown {
		position: absolute;
		visibility:hidden;
		opacity: 0;
		top: 0;
		left: 100%;
		margin-left: util.dp(-4);
		&:not(:hover) {
			//https://easings.net/#easeInCubic
			transition: all 200ms cubic-bezier(0.32, 0, 0.67, 0);;
		}
	}

	//second expands on hover
	li:hover > menu.goui-dropdown, li:focus-within > menu {
		transition: 0s;
		visibility: visible;
		opacity: 1;
		pointer-events: all;
	}



}

button.goui-button.has-menu.with-text {
	padding-right: util.dp(36);

	&:after {
		position: absolute;
		top: util.dp(12);
		right: util.dp(8);
		@extend %icon;
		margin-right: 0;
		content: "expand_more";
		.goui-dropdown & {
			content: "chevron_right";
		}
	}
}


menu.goui-dropdown.goui-menu-color, .goui-menu-color {
	//color: #CDAD00;
	//color: #E74C3C;
	//color: #9B59B6;
	//color: #8E44AD;
	//color: #2980B9;
	//color: #3498DB;
	//color: #1ABC9C;
	//color: #16A085;
	//color: #27AE60;
	//color: #2ECC71;
	//color: #F1C40F;
	//color: #F39C12;
	//color: #E67E22
	//color: #D35400
	//color: #95A5A6;
	//color: #34495E;
	//color: #808B96;
	//color: #1652a1;

	overflow: auto;
	width: (9 * util.dp(38)) + util.dp(32);
	display:flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	> li:first-child,> button:first-child  {
		// "Auto" button
		width: 100%;

		button {
			margin-bottom: util.dp(12);
			.text {
				text-align: center;
			}
		}
	}

	button {
		text-align: center;
		div {
			//color dot
			display: inline-block;
			width: util.dp(16);
			height: util.dp(16);
			border-radius: 50%;
			border: 1px solid config.$colorOutline;
		}
	}
}

menu.main-menu, menu.west-menu {
	width: util.dp(200);
	list-style: none;
	padding: util.dp(8);
	margin-bottom: util.dp(12);
	background-color: config.$surfaceHigh;

	.goui-button {
		width: 100%;
		text-align: left;
	}
}


